/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v12.2, Version=12.2.18.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v12.2\12.2.18.0__b88d1754d700e49a\DevExpress.XtraReports.v12.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>ru-RU</Localization>
///   <Version>12.2</Version>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class SpecificationList : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.TopMarginBand TopMargin;
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRTable table2;
        private DevExpress.XtraReports.UI.XRTableRow tableRow3;
        private DevExpress.XtraReports.UI.XRTableCell tableCell19;
        private DevExpress.XtraReports.UI.XRTableCell tableCell25;
        private DevExpress.XtraReports.UI.XRTableCell tableCell22;
        private DevExpress.XtraReports.UI.XRTableCell tableCell20;
        private DevExpress.XtraReports.UI.XRTableCell tableCell26;
        private DevExpress.XtraReports.UI.XRTableCell tableCell23;
        private DevExpress.XtraReports.UI.XRTableCell tableCell21;
        private DevExpress.XtraReports.Parameters.Parameter NDS_PERC;
        private DevExpress.XtraReports.UI.XRTableCell tableCell27;
        private DevExpress.XtraReports.UI.XRTableCell tableCell24;
        private DevExpress.XtraReports.UI.BottomMarginBand BottomMargin;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.ReportHeaderBand ReportHeader;
        private DevExpress.XtraReports.UI.XRRichText richText1;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRTable table1;
        private DevExpress.XtraReports.UI.XRTableRow tableRow1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell7;
        private DevExpress.XtraReports.UI.XRTableCell tableCell5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell6;
        private DevExpress.XtraReports.UI.XRTableCell tableCell8;
        private DevExpress.XtraReports.UI.XRTableCell tableCell3;
        private DevExpress.XtraReports.UI.XRTableCell tableCell4;
        private DevExpress.XtraReports.UI.XRTableCell tableCell9;
        private DevExpress.XtraReports.UI.XRTableRow tableRow2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell10;
        private DevExpress.XtraReports.UI.XRTableCell tableCell11;
        private DevExpress.XtraReports.UI.XRTableCell tableCell12;
        private DevExpress.XtraReports.UI.XRTableCell tableCell13;
        private DevExpress.XtraReports.UI.XRTableCell tableCell14;
        private DevExpress.XtraReports.UI.XRTableCell tableCell15;
        private DevExpress.XtraReports.UI.XRTableCell tableCell16;
        private DevExpress.XtraReports.UI.XRTableCell tableCell17;
        private DevExpress.XtraReports.UI.XRTableCell tableCell18;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRRichText richText4;
        private DevExpress.XtraReports.UI.XRRichText richText3;
        private DevExpress.XtraReports.UI.XRTable table3;
        private DevExpress.XtraReports.UI.XRTableRow tableRow4;
        private DevExpress.XtraReports.UI.XRTableCell tableCell28;
        private DevExpress.XtraReports.UI.XRTableCell tableCell29;
        private DevExpress.XtraReports.UI.XRTableCell tableCell32;
        private DevExpress.XtraReports.UI.XRTableCell tableCell30;
        private DevExpress.XtraReports.UI.XRTableCell tableCell35;
        private DevExpress.XtraReports.UI.XRTableRow tableRow5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell31;
        private DevExpress.XtraReports.UI.XRTableCell tableCell36;
        private DevExpress.XtraReports.UI.XRTableRow tableRow6;
        private DevExpress.XtraReports.UI.XRTableCell tableCell33;
        private DevExpress.XtraReports.UI.XRRichText richText2;
        private System.Data.SqlClient.SqlDataAdapter SpecActTableAdapter;
        private System.Data.SqlClient.SqlCommand sqlCommand1;
        private System.Data.SqlClient.SqlConnection sqlConnection1;
        private XtraReportSerialization.SpecListDataSet SpecList;
        private DevExpress.XtraReports.UI.CalculatedField CYear;
        private DevExpress.XtraReports.Parameters.Parameter CONTRACT_NUM;
        private DevExpress.XtraReports.Parameters.Parameter CONTRACT_DATE;
        private DevExpress.XtraReports.Parameters.Parameter BABKI;
        private System.Resources.ResourceManager _resources;
        public SpecificationList() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAFAAAAAAAAAFBBRFBBRFDpMUDGn" +
                        "nyCyFvRzRPZ6/FlGEZjdgwBAADJAAAAAAAAAIYAAABDAAAAGwIAAD5yAGkAYwBoAFQAZQB4AHQAMQAuA" +
                        "FMAZQByAGkAYQBsAGkAegBhAGIAbABlAFIAdABmAFMAdAByAGkAbgBnAAAAAAA+cgBpAGMAaABUAGUAe" +
                        "AB0ADIALgBTAGUAcgBpAGEAbABpAHoAYQBiAGwAZQBSAHQAZgBTAHQAcgBpAG4AZwAzBQAAPnIAaQBjA" +
                        "GgAVABlAHgAdAAzAC4AUwBlAHIAaQBhAGwAaQB6AGEAYgBsAGUAUgB0AGYAUwB0AHIAaQBuAGcA3ggAA" +
                        "D5yAGkAYwBoAFQAZQB4AHQANAAuAFMAZQByAGkAYQBsAGkAegBhAGIAbABlAFIAdABmAFMAdAByAGkAb" +
                        "gBnAN0NAAAucwBxAGwAQwBvAG0AbQBhAG4AZAAxAC4AQwBvAG0AbQBhAG4AZABUAGUAeAB0AAgTAAABs" +
                        "Apld0JjQUhJQWRBQm1BREVBWEFCaEFHNEFjd0JwQUZ3QVlRQnVBSE1BYVFCakFIQUFad0F4QURJQU5RQ" +
                        "XhBRndBWkFCbEFHWUFaZ0F3QUhzQVhBQm1BRzhBYmdCMEFIUUFZZ0JzQUhzQVhBQm1BREFBWEFCbUFHN" +
                        "EFhUUJzQUZ3QVpnQmpBR2dBWVFCeUFITUFaUUIwQURJQU1BQTBBSHNBWEFBcUFGd0FaZ0J1QUdFQWJRQ" +
                        "mxBQ0FBVkFCcEFHMEFaUUJ6QUNBQVRnQmxBSGNBSUFCU0FHOEFiUUJoQUc0QU93QjlBRlFBYVFCdEFHV" +
                        "UFjd0FnQUU0QVpRQjNBQ0FBVWdCdkFHMEFZUUJ1QUNBQVF3QlpBRklBT3dCOUFIc0FYQUJtQURFQVhBQ" +
                        "m1BRzRBYVFCc0FDQUFWQUJwQUcwQVpRQnpBQ0FBVGdCbEFIY0FJQUJTQUc4QWJRQmhBRzRBT3dCOUFIM" +
                        "EFEUUFLQUhzQVhBQmpBRzhBYkFCdkFISUFkQUJpQUd3QUlBQTdBRndBY2dCbEFHUUFNQUJjQUdjQWNnQ" +
                        "mxBR1VBYmdBd0FGd0FZZ0JzQUhVQVpRQXdBRHNBZlFBTkFBb0FYQUIyQUdrQVpRQjNBR3NBYVFCdUFHU" +
                        "UFOQUJjQUhVQVl3QXhBRndBY0FCaEFISUFaQUJjQUdnQWVRQndBR2dBY0FCaEFISUFNQUJjQUhFQWNnQ" +
                        "mNBR01BWmdBeEFGd0FiQUJoQUc0QVp3QXhBREFBTkFBNUFGd0FZZ0JjQUdZQU1BQmNBR1lBY3dBeUFEZ" +
                        "0FYQUFuQUdRQU1RQmNBQ2NBWlFCbUFGd0FKd0JsQURVQVhBQW5BR1lBTmdCY0FDY0FaUUE0QUZ3QUp3Q" +
                        "m1BRFFBWEFBbkFHVUFPQUJjQUNjQVpRQmhBRndBSndCbEFEQUFYQUFuQUdZQU5nQmNBQ2NBWlFBNEFGd" +
                        "0FKd0JtQUdZQVhBQm1BREVBWEFCd0FHRUFjZ0FOQUFvQVhBQm1BREFBWEFBbkFHVUFaUUJjQUNjQVpnQ" +
                        "XlBRndBWmdBeEFDQUFJQUFpQUY4QVh3QmZBRjhBSWdBZ0FGOEFYd0JmQUY4QVh3QmZBRjhBWHdCZkFGO" +
                        "EFJQUJjQUdZQU1BQWdBRElBTUFCZkFGOEFYd0JjQUdZQU1RQWdBQ0FBWEFCbUFEQUFYQUFuQUdVQU13Q" +
                        "mNBR1lBTVFBZ0FDNEFYQUJ3QUdFQWNnQU5BQW9BWEFCbUFEQUFYQUFuQUdVQVlRQmNBR1lBTVFBZ0FDQ" +
                        "UFYQUJtQURBQVhBQW5BR1VBTkFCY0FDY0FaUUJsQUZ3QUp3QmxBRE1BWEFBbkFHVUFaUUJjQUNjQVpRQ" +
                        "XlBRndBSndCbEFHVUFYQUFuQUdZQU1BQmNBQ2NBWmdBekFDQUFYQUFuQUdJQU9RQWdBRnNBVUFCaEFIS" +
                        "UFZUUJ0QUdVQWRBQmxBSElBY3dBdUFFTUFUd0JPQUZRQVVnQkJBRU1BVkFCZkFFNEFWUUJOQUYwQUlBQ" +
                        "mNBQ2NBWlFCbEFGd0FKd0JtQURJQVhBQm1BREVBSUFBZ0FGc0FVQUJoQUhJQVlRQnRBR1VBZEFCbEFIS" +
                        "UFjd0F1QUVNQVR3Qk9BRlFBVWdCQkFFTUFWQUJmQUVRQVFRQlVBRVVBWFFBZ0FGd0FaZ0F3QUZ3QUp3Q" +
                        "mxBRE1BWEFCbUFERUFJQUF1QUNBQUlBQmNBR0lBTUFCY0FHWUFjd0F5QURRQVhBQndBR0VBY2dBTkFBb" +
                        "0FmUUFOQUFvQQGoB2V3QmNBSElBZEFCbUFERUFYQUJoQUc0QWN3QnBBR01BY0FCbkFERUFNZ0ExQURFQ" +
                        "URRQUtBSHNBRFFBS0FGd0FaZ0J2QUc0QWRBQjBBR0lBYkFBTkFBb0Fld0JjQUdZQU1BQWdBRlFBYVFCd" +
                        "EFHVUFjd0FnQUU0QVpRQjNBQ0FBVWdCdkFHMEFZUUJ1QURzQWZRQU5BQW9BZlFBTkFBb0Fld0FOQUFvQ" +
                        "VhBQmpBRzhBYkFCdkFISUFkQUJpQUd3QURRQUtBRHNBRFFBS0FGd0FjZ0JsQUdRQU1BQmNBR2NBY2dCb" +
                        "EFHVUFiZ0F3QUZ3QVlnQnNBSFVBWlFBd0FEc0FEUUFLQUZ3QWNnQmxBR1FBTUFCY0FHY0FjZ0JsQUdVQ" +
                        "WJnQXdBRndBWWdCc0FIVUFaUUF5QURVQU5RQTdBQTBBQ2dCOUFBMEFDZ0JjQUc0QWJ3QjFBR2tBWXdCd" +
                        "kFHMEFjQUJoQUhRQVhBQnpBSEFBYkFCNUFIUUFkd0J1QUdrQWJnQmxBRndBYUFCMEFHMEFZUUIxQUhRQ" +
                        "WN3QndBSHNBWEFCekFHVUFZd0IwQUdRQVhBQndBR0VBY2dCa0FGd0FjQUJzQUdFQWFRQnVBRndBY1FCc" +
                        "0FIc0FYQUJpQUZ3QVl3Qm1BREVBSUFCY0FIVUFNUUF3QURVQU53QmNBQ2NBWkFBeEFGd0FkUUF4QURBQ" +
                        "U9RQXhBRndBSndCbUFETUFYQUIxQURFQU1BQTRBRFFBWEFBbkFHVUFZd0JjQUhVQU1RQXdBRGdBTkFCY" +
                        "0FDY0FaUUJqQUZ3QWRRQXhBREFBTndBeUFGd0FKd0JsQURBQUlBQmNBSFVBTVFBd0FEZ0FOd0JjQUNjQ" +
                        "VpRQm1BRndBZFFBeEFEQUFPQUE0QUZ3QUp3Qm1BREFBWEFCMUFERUFNQUE0QURZQVhBQW5BR1VBWlFCY" +
                        "0FIVUFNUUF3QURnQU53QmNBQ2NBWlFCbUFGd0FkUUF4QURBQU9BQXdBRndBSndCbEFEZ0FYQUIxQURFQ" +
                        "U1BQTRBRGtBWEFBbkFHWUFNUUJjQUhVQU1RQXhBREFBTUFCY0FDY0FaZ0JqQUZ3QWRRQXhBREVBTUFBe" +
                        "UFGd0FKd0JtQUdVQU9nQWdBRnNBVUFCaEFISUFZUUJ0QUdVQWRBQmxBSElBY3dBdUFFSUFRUUJDQUVzQ" +
                        "VNRQmRBSDBBWEFCakFHWUFNUUJjQUhBQVlRQnlBSDBBRFFBS0FIMEFEUUFLQUE9PQH8CWV3QmNBSElBZ" +
                        "EFCbUFERUFYQUJoQUc0QWN3QnBBRndBWVFCdUFITUFhUUJqQUhBQVp3QXhBRElBTlFBeEFGd0FaQUJsQ" +
                        "UdZQVpnQXdBSHNBWEFCbUFHOEFiZ0IwQUhRQVlnQnNBSHNBWEFCbUFEQUFYQUJtQUc0QWFRQnNBRndBW" +
                        "mdCakFHZ0FZUUJ5QUhNQVpRQjBBRElBTUFBMEFIc0FYQUFxQUZ3QVpnQnVBR0VBYlFCbEFDQUFWQUJwQ" +
                        "UcwQVpRQnpBQ0FBVGdCbEFIY0FJQUJTQUc4QWJRQmhBRzRBT3dCOUFGUUFhUUJ0QUdVQWN3QWdBRTRBW" +
                        "lFCM0FDQUFVZ0J2QUcwQVlRQnVBQ0FBUXdCWkFGSUFPd0I5QUhzQVhBQm1BREVBWEFCbUFHNEFhUUJzQ" +
                        "UNBQVZBQnBBRzBBWlFCekFDQUFUZ0JsQUhjQUlBQlNBRzhBYlFCaEFHNEFPd0I5QUhzQVhBQm1BRElBW" +
                        "EFCbUFHNEFhUUJzQUZ3QVpnQmpBR2dBWVFCeUFITUFaUUIwQURBQUlBQlVBR2tBYlFCbEFITUFJQUJPQ" +
                        "UdVQWR3QWdBRklBYndCdEFHRUFiZ0E3QUgwQWZRQU5BQW9BZXdCY0FHTUFid0JzQUc4QWNnQjBBR0lBY" +
                        "kFBZ0FEc0FYQUJ5QUdVQVpBQXdBRndBWndCeUFHVUFaUUJ1QURBQVhBQmlBR3dBZFFCbEFEQUFPd0I5Q" +
                        "UEwQUNnQmNBSFlBYVFCbEFIY0Fhd0JwQUc0QVpBQTBBRndBZFFCakFERUFYQUJ3QUdFQWNnQmtBRndBW" +
                        "XdCbUFERUFYQUJzQUdFQWJnQm5BREVBTUFBMEFEa0FYQUJtQURBQVhBQm1BSE1BTWdBd0FGd0FKd0JqQ" +
                        "URjQVhBQW5BR1VBTUFCY0FDY0FaUUJoQUZ3QUp3QmxBREFBWEFBbkFHVUFOd0JjQUNjQVpnQTNBRndBS" +
                        "ndCbEFEZ0FYQUFuQUdVQVlRQmNBR1lBTVFBZ0FDQUFYd0JmQUY4QVh3QmZBRjhBWHdCZkFGOEFYd0JmQ" +
                        "UY4QVh3QmZBRjhBWHdCZkFGOEFYd0JmQUY4QVh3QmZBRjhBWHdCZkFGOEFYd0JjQUhBQVlRQnlBQTBBQ" +
                        "2dCY0FIQUFZUUJ5QUEwQUNnQmZBRjhBWHdCZkFGOEFYd0JmQUY4QVh3QmZBRjhBWHdCZkFGOEFYd0JmQ" +
                        "UY4QVh3QmZBRjhBWHdCZkFGOEFYd0JmQUY4QVh3QmZBRjhBWHdCZkFGOEFYd0JmQUY4QVh3QXZBRndBW" +
                        "mdBd0FGd0FKd0JrQURRQVhBQW5BR01BT0FCY0FDY0FZd0JsQUZ3QVpnQXhBQ0FBTHdBZ0FDSUFYd0JmQ" +
                        "UY4QVh3QWlBQ0FBWHdCZkFGOEFYd0JmQUY4QVh3QWdBRndBWmdBeUFDQUFNZ0JjQUdZQU1BQWdBREFBW" +
                        "HdCZkFGOEFYQUJtQURFQUlBQWdBRndBWmdBd0FGd0FKd0JsQURNQVhBQm1BREVBSUFBdUFGd0FjQUJoQ" +
                        "UhJQURRQUtBRndBY0FCaEFISUFEUUFLQUZ3QVpnQXdBRndBSndCakFHTUFYQUJtQURFQUlBQXVBRndBW" +
                        "mdBd0FGd0FKd0JqQUdZQVhBQm1BREVBSUFBdUFGd0FaZ0J6QURJQU5BQmNBSEFBWVFCeUFBMEFDZ0I5Q" +
                        "UEwQUNnQT0BqApld0JjQUhJQWRBQm1BREVBWEFCaEFHNEFjd0JwQUZ3QVlRQnVBSE1BYVFCakFIQUFad" +
                        "0F4QURJQU5RQXhBRndBWkFCbEFHWUFaZ0F3QUhzQVhBQm1BRzhBYmdCMEFIUUFZZ0JzQUhzQVhBQm1BR" +
                        "EFBWEFCbUFHNEFhUUJzQUZ3QVpnQmpBR2dBWVFCeUFITUFaUUIwQURJQU1BQTBBSHNBWEFBcUFGd0FaZ" +
                        "0J1QUdFQWJRQmxBQ0FBVkFCcEFHMEFaUUJ6QUNBQVRnQmxBSGNBSUFCU0FHOEFiUUJoQUc0QU93QjlBR" +
                        "lFBYVFCdEFHVUFjd0FnQUU0QVpRQjNBQ0FBVWdCdkFHMEFZUUJ1QUNBQVF3QlpBRklBT3dCOUFIc0FYQ" +
                        "UJtQURFQVhBQm1BRzRBYVFCc0FDQUFWQUJwQUcwQVpRQnpBQ0FBVGdCbEFIY0FJQUJTQUc4QWJRQmhBR" +
                        "zRBT3dCOUFIc0FYQUJtQURJQVhBQm1BRzRBYVFCc0FGd0FaZ0JqQUdnQVlRQnlBSE1BWlFCMEFEQUFJQ" +
                        "UJVQUdrQWJRQmxBSE1BSUFCT0FHVUFkd0FnQUZJQWJ3QnRBR0VBYmdBN0FIMEFmUUFOQUFvQWV3QmNBR" +
                        "01BYndCc0FHOEFjZ0IwQUdJQWJBQWdBRHNBWEFCeUFHVUFaQUF3QUZ3QVp3QnlBR1VBWlFCdUFEQUFYQ" +
                        "UJpQUd3QWRRQmxBREFBT3dCOUFBMEFDZ0JjQUhZQWFRQmxBSGNBYXdCcEFHNEFaQUEwQUZ3QWRRQmpBR" +
                        "EVBWEFCd0FHRUFjZ0JrQUZ3QVl3Qm1BREVBWEFCc0FHRUFiZ0JuQURFQU1BQTBBRGtBWEFCbUFEQUFYQ" +
                        "UJtQUhNQU1nQXdBRndBSndCakFEZ0FYQUFuQUdZQU1RQmNBQ2NBWlFCbUFGd0FKd0JsQUdVQVhBQW5BR" +
                        "1VBWWdCY0FDY0FaUUJrQUZ3QUp3QmxBRGdBWEFBbkFHWUFNZ0JjQUNjQVpRQTFBRndBSndCbEFHSUFYQ" +
                        "UFuQUdZQVl3QmNBR1lBTVFBZ0FDQUFYd0JmQUY4QVh3QmZBRjhBWHdCZkFGOEFYd0JmQUY4QVh3QmZBR" +
                        "jhBWHdCZkFGOEFYd0JmQUY4QVh3QmZBRjhBWHdCZkFGOEFYd0JjQUhBQVlRQnlBQTBBQ2dCY0FIQUFZU" +
                        "UJ5QUEwQUNnQmZBRjhBWHdCZkFGOEFYd0JmQUY4QVh3QmZBRjhBWHdCZkFGOEFYd0JmQUY4QVh3QmZBR" +
                        "jhBWHdCZkFGOEFYd0JmQUY4QVh3QmZBRjhBWHdCZkFGOEFYd0JmQUY4QVh3QXZBRndBWmdBd0FGd0FKd" +
                        "0JrQURRQVhBQW5BR01BT0FCY0FDY0FZd0JsQUZ3QVpnQXhBQ0FBTHdBZ0FDSUFYd0JmQUY4QVh3QWlBQ" +
                        "0FBWHdCZkFGOEFYd0JmQUY4QVh3QWdBRndBWmdBeUFDQUFNZ0JjQUdZQU1BQWdBREFBWHdCZkFGOEFYQ" +
                        "UJtQURFQUlBQWdBRndBWmdBd0FGd0FKd0JsQURNQVhBQm1BREVBSUFBdUFGd0FjQUJoQUhJQURRQUtBR" +
                        "ndBY0FCaEFISUFEUUFLQUZ3QVpnQXdBRndBSndCakFHTUFYQUJtQURFQUlBQXVBRndBWmdBd0FGd0FKd" +
                        "0JqQUdZQVhBQm1BREVBSUFBdUFGd0FZd0JtQURBQVhBQm1BSE1BTWdBMEFGd0FjQUJoQUhJQURRQUtBS" +
                        "DBBRFFBS0FBPT0BqwJTZWxlY3QgIkNTX0lEIiwgIkNPTlRSQUNUX0lEIiwgIlVSR0VOQ1lfSUQiLCAiV" +
                        "EFSSUYiLCAiSU5URUdSQVRFX1RZUEVfSUQiLCAiT1JERVJfTlVNIiwgIlVSR0VOQ1lfTkFNRSIsICJSQ" +
                        "UlTRSIsICJDT1NUIiwgIk5EUyIsICJTVU1NQVJZIiwgIkRFVklDRV9DT1VOVCIsICJVU0VEX0NPVU5UI" +
                        "iwgIlNFUklBTFMiLCAiRU5USVRZX0lEIiwgIkRUX0lEIiwgIkRUX0VOVElUWV9JRCIsICJERVZJQ0VfT" +
                        "kFNRSIsICJERVZJQ0VfTUFSSyIsICJERVZfQ09ERSIsICJDVVNUT01FUl9EVF9OQU1FIiBmcm9tICJkY" +
                        "m8iLiJTcGVjQWN0Ig==";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            this.TopMargin = new DevExpress.XtraReports.UI.TopMarginBand();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.BottomMargin = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.ReportHeader = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.table2 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow3 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell19 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell25 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell22 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell20 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell26 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell23 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell21 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell27 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell24 = new DevExpress.XtraReports.UI.XRTableCell();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.richText1 = new DevExpress.XtraReports.UI.XRRichText();
            this.table1 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow1 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow2 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell1 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell7 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell5 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell2 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell6 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell8 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell3 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell4 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell9 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell10 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell11 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell12 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell13 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell14 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell15 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell16 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell17 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell18 = new DevExpress.XtraReports.UI.XRTableCell();
            this.richText4 = new DevExpress.XtraReports.UI.XRRichText();
            this.richText3 = new DevExpress.XtraReports.UI.XRRichText();
            this.table3 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow4 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow5 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableRow6 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell28 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell29 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell32 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell30 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell35 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell31 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell36 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell33 = new DevExpress.XtraReports.UI.XRTableCell();
            this.richText2 = new DevExpress.XtraReports.UI.XRRichText();
            this.SpecActTableAdapter = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand1 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection1 = new System.Data.SqlClient.SqlConnection();
            this.SpecList = new XtraReportSerialization.SpecListDataSet();
            this.CYear = new DevExpress.XtraReports.UI.CalculatedField();
            this.NDS_PERC = new DevExpress.XtraReports.Parameters.Parameter();
            this.CONTRACT_NUM = new DevExpress.XtraReports.Parameters.Parameter();
            this.CONTRACT_DATE = new DevExpress.XtraReports.Parameters.Parameter();
            this.BABKI = new DevExpress.XtraReports.Parameters.Parameter();
            ((System.ComponentModel.ISupportInitialize)(this.table2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.richText1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.richText4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.richText3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.richText2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.SpecList)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // TopMargin
            // 
            this.TopMargin.Dpi = 254F;
            this.TopMargin.HeightF = 116.6283F;
            this.TopMargin.Name = "TopMargin";
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table2});
            this.Detail.Dpi = 254F;
            this.Detail.HeightF = 108.4792F;
            this.Detail.Name = "Detail";
            // 
            // BottomMargin
            // 
            this.BottomMargin.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.pageInfo1});
            this.BottomMargin.Dpi = 254F;
            this.BottomMargin.HeightF = 132.2917F;
            this.BottomMargin.Name = "BottomMargin";
            // 
            // ReportHeader
            // 
            this.ReportHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.richText1});
            this.ReportHeader.Dpi = 254F;
            this.ReportHeader.HeightF = 233.045F;
            this.ReportHeader.Name = "ReportHeader";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.table1});
            this.GroupHeader1.Dpi = 254F;
            this.GroupHeader1.HeightF = 148.1667F;
            this.GroupHeader1.KeepTogether = true;
            this.GroupHeader1.Name = "GroupHeader1";
            this.GroupHeader1.RepeatEveryPage = true;
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.richText4,
                        this.richText3,
                        this.table3});
            this.GroupFooter1.Dpi = 254F;
            this.GroupFooter1.HeightF = 660.2709F;
            this.GroupFooter1.Name = "GroupFooter1";
            // 
            // table2
            // 
            this.table2.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right)));
            this.table2.Dpi = 254F;
            this.table2.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.table2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.table2.Name = "table2";
            this.table2.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow3});
            this.table2.SizeF = new System.Drawing.SizeF(2601F, 108.4792F);
            this.table2.StylePriority.UseBorders = false;
            this.table2.StylePriority.UseFont = false;
            this.table2.StylePriority.UseTextAlignment = false;
            this.table2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            // 
            // tableRow3
            // 
            this.tableRow3.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell19,
                        this.tableCell25,
                        this.tableCell22,
                        this.tableCell20,
                        this.tableCell26,
                        this.tableCell23,
                        this.tableCell21,
                        this.tableCell27,
                        this.tableCell24});
            this.tableRow3.Dpi = 254F;
            this.tableRow3.Name = "tableRow3";
            this.tableRow3.Weight = 1;
            // 
            // tableCell19
            // 
            this.tableCell19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.CONTRACT_ID")});
            this.tableCell19.Dpi = 254F;
            this.tableCell19.Name = "tableCell19";
            this.tableCell19.StylePriority.UseTextAlignment = false;
            summary1.Func = DevExpress.XtraReports.UI.SummaryFunc.RecordNumber;
            summary1.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell19.Summary = summary1;
            this.tableCell19.Text = "tableCell19";
            this.tableCell19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell19.Weight = 0.17328399002327144;
            // 
            // tableCell25
            // 
            this.tableCell25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.CUSTOMER_DT_NAME")});
            this.tableCell25.Dpi = 254F;
            this.tableCell25.Name = "tableCell25";
            this.tableCell25.StylePriority.UseTextAlignment = false;
            this.tableCell25.Text = "tableCell25";
            this.tableCell25.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell25.Weight = 0.45592196563683052;
            // 
            // tableCell22
            // 
            this.tableCell22.Dpi = 254F;
            this.tableCell22.Name = "tableCell22";
            this.tableCell22.StylePriority.UseTextAlignment = false;
            this.tableCell22.Text = "шт.";
            this.tableCell22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell22.Weight = 0.37079404433989804;
            // 
            // tableCell20
            // 
            this.tableCell20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.DEVICE_COUNT")});
            this.tableCell20.Dpi = 254F;
            this.tableCell20.Name = "tableCell20";
            this.tableCell20.StylePriority.UseTextAlignment = false;
            this.tableCell20.Text = "tableCell20";
            this.tableCell20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell20.Weight = 0.20524953557368642;
            // 
            // tableCell26
            // 
            this.tableCell26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.TOTAL_PRICE", "{0:n2}")});
            this.tableCell26.Dpi = 254F;
            this.tableCell26.Name = "tableCell26";
            this.tableCell26.StylePriority.UseTextAlignment = false;
            this.tableCell26.Text = "[TotalPrice]";
            this.tableCell26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell26.Weight = 0.39131842894903013;
            // 
            // tableCell23
            // 
            this.tableCell23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.COST", "{0:n2}")});
            this.tableCell23.Dpi = 254F;
            this.tableCell23.Name = "tableCell23";
            this.tableCell23.StylePriority.UseTextAlignment = false;
            this.tableCell23.Text = "tableCell23";
            this.tableCell23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell23.Weight = 0.38324331092293062;
            // 
            // tableCell21
            // 
            this.tableCell21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding(this.NDS_PERC, "Text", "{0:n2}")});
            this.tableCell21.Dpi = 254F;
            this.tableCell21.Name = "tableCell21";
            this.tableCell21.StylePriority.UseTextAlignment = false;
            this.tableCell21.Text = "[Parameters.NDS_PERC]";
            this.tableCell21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell21.Weight = 0.22947575122434863;
            // 
            // tableCell27
            // 
            this.tableCell27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.NDS", "{0:n2}")});
            this.tableCell27.Dpi = 254F;
            this.tableCell27.Name = "tableCell27";
            this.tableCell27.StylePriority.UseTextAlignment = false;
            this.tableCell27.Text = "tableCell27";
            this.tableCell27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell27.Weight = 0.38324340018493225;
            // 
            // tableCell24
            // 
            this.tableCell24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.SUMMARY", "{0:n2}")});
            this.tableCell24.Dpi = 254F;
            this.tableCell24.Name = "tableCell24";
            this.tableCell24.StylePriority.UseTextAlignment = false;
            this.tableCell24.Text = "tableCell24";
            this.tableCell24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell24.Weight = 0.40746957314507193;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Dpi = 254F;
            this.pageInfo1.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0.0001211166F, 37.04167F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(5, 5, 0, 0, 254F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.Number;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(2601F, 58.41988F);
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            // 
            // richText1
            // 
            this.richText1.Dpi = 254F;
            this.richText1.Font = new System.Drawing.Font("Times New Roman", 14F, System.Drawing.FontStyle.Bold);
            this.richText1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.richText1.Name = "richText1";
            this.richText1.SerializableRtfString = resources.GetString("richText1.SerializableRtfString");
            this.richText1.SizeF = new System.Drawing.SizeF(2601F, 196.0033F);
            this.richText1.StylePriority.UseFont = false;
            // 
            // table1
            // 
            this.table1.Borders = ((DevExpress.XtraPrinting.BorderSide)(((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right)));
            this.table1.Dpi = 254F;
            this.table1.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.table1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.table1.Name = "table1";
            this.table1.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow1,
                        this.tableRow2});
            this.table1.SizeF = new System.Drawing.SizeF(2601F, 148.1667F);
            this.table1.StylePriority.UseBorders = false;
            this.table1.StylePriority.UseFont = false;
            this.table1.StylePriority.UseTextAlignment = false;
            this.table1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            // 
            // tableRow1
            // 
            this.tableRow1.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell1,
                        this.tableCell7,
                        this.tableCell5,
                        this.tableCell2,
                        this.tableCell6,
                        this.tableCell8,
                        this.tableCell3,
                        this.tableCell4,
                        this.tableCell9});
            this.tableRow1.Dpi = 254F;
            this.tableRow1.Name = "tableRow1";
            this.tableRow1.Weight = 0.61721583548774384;
            // 
            // tableRow2
            // 
            this.tableRow2.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell10,
                        this.tableCell11,
                        this.tableCell12,
                        this.tableCell13,
                        this.tableCell14,
                        this.tableCell15,
                        this.tableCell16,
                        this.tableCell17,
                        this.tableCell18});
            this.tableRow2.Dpi = 254F;
            this.tableRow2.Name = "tableRow2";
            this.tableRow2.Weight = 0.38278416451225616;
            // 
            // tableCell1
            // 
            this.tableCell1.Dpi = 254F;
            this.tableCell1.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell1.Multiline = true;
            this.tableCell1.Name = "tableCell1";
            this.tableCell1.StylePriority.UseFont = false;
            this.tableCell1.StylePriority.UseTextAlignment = false;
            this.tableCell1.Text = "№\r\nп/п";
            this.tableCell1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell1.Weight = 0.17328399002327144;
            // 
            // tableCell7
            // 
            this.tableCell7.Dpi = 254F;
            this.tableCell7.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell7.Name = "tableCell7";
            this.tableCell7.StylePriority.UseFont = false;
            this.tableCell7.StylePriority.UseTextAlignment = false;
            this.tableCell7.Text = "Наименование";
            this.tableCell7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell7.Weight = 0.45592187249387228;
            // 
            // tableCell5
            // 
            this.tableCell5.Dpi = 254F;
            this.tableCell5.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell5.Name = "tableCell5";
            this.tableCell5.StylePriority.UseFont = false;
            this.tableCell5.StylePriority.UseTextAlignment = false;
            this.tableCell5.Text = "Единица измерения";
            this.tableCell5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell5.Weight = 0.37079413748285628;
            // 
            // tableCell2
            // 
            this.tableCell2.Dpi = 254F;
            this.tableCell2.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell2.Name = "tableCell2";
            this.tableCell2.StylePriority.UseFont = false;
            this.tableCell2.StylePriority.UseTextAlignment = false;
            this.tableCell2.Text = "Кол-во";
            this.tableCell2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell2.Weight = 0.20524915523994031;
            // 
            // tableCell6
            // 
            this.tableCell6.Dpi = 254F;
            this.tableCell6.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell6.Name = "tableCell6";
            this.tableCell6.StylePriority.UseFont = false;
            this.tableCell6.StylePriority.UseTextAlignment = false;
            this.tableCell6.Text = "Цена, руб.";
            this.tableCell6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell6.Weight = 0.39131861523494665;
            // 
            // tableCell8
            // 
            this.tableCell8.Dpi = 254F;
            this.tableCell8.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell8.Name = "tableCell8";
            this.tableCell8.StylePriority.UseFont = false;
            this.tableCell8.StylePriority.UseTextAlignment = false;
            this.tableCell8.Text = "Сумма, руб.";
            this.tableCell8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell8.Weight = 0.38324340018493219;
            // 
            // tableCell3
            // 
            this.tableCell3.Dpi = 254F;
            this.tableCell3.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell3.Name = "tableCell3";
            this.tableCell3.StylePriority.UseFont = false;
            this.tableCell3.StylePriority.UseTextAlignment = false;
            this.tableCell3.Text = "НДС, %";
            this.tableCell3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell3.Weight = 0.22947555717651894;
            // 
            // tableCell4
            // 
            this.tableCell4.Dpi = 254F;
            this.tableCell4.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell4.Name = "tableCell4";
            this.tableCell4.StylePriority.UseFont = false;
            this.tableCell4.StylePriority.UseTextAlignment = false;
            this.tableCell4.Text = "Сумма НДС, руб.";
            this.tableCell4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell4.Weight = 0.38324359811371844;
            // 
            // tableCell9
            // 
            this.tableCell9.Dpi = 254F;
            this.tableCell9.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell9.Name = "tableCell9";
            this.tableCell9.StylePriority.UseFont = false;
            this.tableCell9.StylePriority.UseTextAlignment = false;
            this.tableCell9.Text = "Всего с НДС, руб.";
            this.tableCell9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell9.Weight = 0.40746967404994339;
            // 
            // tableCell10
            // 
            this.tableCell10.Dpi = 254F;
            this.tableCell10.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell10.Name = "tableCell10";
            this.tableCell10.StylePriority.UseFont = false;
            this.tableCell10.StylePriority.UseTextAlignment = false;
            this.tableCell10.Text = "1";
            this.tableCell10.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell10.Weight = 0.17328400166614122;
            // 
            // tableCell11
            // 
            this.tableCell11.Dpi = 254F;
            this.tableCell11.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell11.Name = "tableCell11";
            this.tableCell11.StylePriority.UseFont = false;
            this.tableCell11.StylePriority.UseTextAlignment = false;
            this.tableCell11.Text = "2";
            this.tableCell11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell11.Weight = 0.45592193070822118;
            // 
            // tableCell12
            // 
            this.tableCell12.Dpi = 254F;
            this.tableCell12.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell12.Name = "tableCell12";
            this.tableCell12.StylePriority.UseFont = false;
            this.tableCell12.StylePriority.UseTextAlignment = false;
            this.tableCell12.Text = "3";
            this.tableCell12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell12.Weight = 0.3707940676256376;
            // 
            // tableCell13
            // 
            this.tableCell13.Dpi = 254F;
            this.tableCell13.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell13.Name = "tableCell13";
            this.tableCell13.StylePriority.UseFont = false;
            this.tableCell13.StylePriority.UseTextAlignment = false;
            this.tableCell13.Text = "4";
            this.tableCell13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell13.Weight = 0.2052494113830754;
            // 
            // tableCell14
            // 
            this.tableCell14.Dpi = 254F;
            this.tableCell14.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell14.Name = "tableCell14";
            this.tableCell14.StylePriority.UseFont = false;
            this.tableCell14.StylePriority.UseTextAlignment = false;
            this.tableCell14.Text = "5";
            this.tableCell14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell14.Weight = 0.39131870837790483;
            // 
            // tableCell15
            // 
            this.tableCell15.Dpi = 254F;
            this.tableCell15.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell15.Name = "tableCell15";
            this.tableCell15.StylePriority.UseFont = false;
            this.tableCell15.StylePriority.UseTextAlignment = false;
            this.tableCell15.Text = "6";
            this.tableCell15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell15.Weight = 0.38324319061327622;
            // 
            // tableCell16
            // 
            this.tableCell16.Dpi = 254F;
            this.tableCell16.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell16.Name = "tableCell16";
            this.tableCell16.StylePriority.UseFont = false;
            this.tableCell16.StylePriority.UseTextAlignment = false;
            this.tableCell16.Text = "7";
            this.tableCell16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell16.Weight = 0.22947575510530513;
            // 
            // tableCell17
            // 
            this.tableCell17.Dpi = 254F;
            this.tableCell17.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell17.Name = "tableCell17";
            this.tableCell17.StylePriority.UseFont = false;
            this.tableCell17.StylePriority.UseTextAlignment = false;
            this.tableCell17.Text = "8";
            this.tableCell17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell17.Weight = 0.38324340018493225;
            // 
            // tableCell18
            // 
            this.tableCell18.Dpi = 254F;
            this.tableCell18.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell18.Name = "tableCell18";
            this.tableCell18.StylePriority.UseFont = false;
            this.tableCell18.StylePriority.UseTextAlignment = false;
            this.tableCell18.Text = "9";
            this.tableCell18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell18.Weight = 0.40746953433550603;
            // 
            // richText4
            // 
            this.richText4.Dpi = 254F;
            this.richText4.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.richText4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 383.6458F);
            this.richText4.Name = "richText4";
            this.richText4.SerializableRtfString = resources.GetString("richText4.SerializableRtfString");
            this.richText4.SizeF = new System.Drawing.SizeF(1275.292F, 276.6251F);
            this.richText4.StylePriority.UseFont = false;
            // 
            // richText3
            // 
            this.richText3.Dpi = 254F;
            this.richText3.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.richText3.LocationFloat = new DevExpress.Utils.PointFloat(1336.146F, 383.6458F);
            this.richText3.Name = "richText3";
            this.richText3.SerializableRtfString = resources.GetString("richText3.SerializableRtfString");
            this.richText3.SizeF = new System.Drawing.SizeF(1264.854F, 276.6249F);
            this.richText3.StylePriority.UseFont = false;
            // 
            // table3
            // 
            this.table3.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.table3.Dpi = 254F;
            this.table3.LocationFloat = new DevExpress.Utils.PointFloat(0.0001211166F, 0F);
            this.table3.Name = "table3";
            this.table3.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow4,
                        this.tableRow5,
                        this.tableRow6});
            this.table3.SizeF = new System.Drawing.SizeF(2601F, 301.625F);
            this.table3.StylePriority.UseBorders = false;
            // 
            // tableRow4
            // 
            this.tableRow4.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell28,
                        this.tableCell29,
                        this.tableCell32,
                        this.tableCell30,
                        this.tableCell35});
            this.tableRow4.Dpi = 254F;
            this.tableRow4.Name = "tableRow4";
            this.tableRow4.Weight = 1;
            // 
            // tableRow5
            // 
            this.tableRow5.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell31,
                        this.tableCell36});
            this.tableRow5.Dpi = 254F;
            this.tableRow5.Name = "tableRow5";
            this.tableRow5.Weight = 1;
            // 
            // tableRow6
            // 
            this.tableRow6.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell33});
            this.tableRow6.Dpi = 254F;
            this.tableRow6.Name = "tableRow6";
            this.tableRow6.Weight = 1;
            // 
            // tableCell28
            // 
            this.tableCell28.Dpi = 254F;
            this.tableCell28.Font = new System.Drawing.Font("Times New Roman", 12F, System.Drawing.FontStyle.Bold);
            this.tableCell28.Name = "tableCell28";
            this.tableCell28.StylePriority.UseFont = false;
            this.tableCell28.Text = "Всего";
            this.tableCell28.Weight = 1.5965681472776638;
            // 
            // tableCell29
            // 
            this.tableCell29.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.COST")});
            this.tableCell29.Dpi = 254F;
            this.tableCell29.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell29.Name = "tableCell29";
            this.tableCell29.StylePriority.UseFont = false;
            this.tableCell29.StylePriority.UseTextAlignment = false;
            summary2.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell29.Summary = summary2;
            this.tableCell29.Text = "tableCell29";
            this.tableCell29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell29.Weight = 0.38324342449442772;
            // 
            // tableCell32
            // 
            this.tableCell32.Dpi = 254F;
            this.tableCell32.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.tableCell32.Name = "tableCell32";
            this.tableCell32.StylePriority.UseFont = false;
            this.tableCell32.StylePriority.UseTextAlignment = false;
            this.tableCell32.Text = "-";
            this.tableCell32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell32.Weight = 0.22947579136595719;
            // 
            // tableCell30
            // 
            this.tableCell30.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.NDS")});
            this.tableCell30.Dpi = 254F;
            this.tableCell30.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell30.Name = "tableCell30";
            this.tableCell30.StylePriority.UseFont = false;
            this.tableCell30.StylePriority.UseTextAlignment = false;
            summary3.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell30.Summary = summary3;
            this.tableCell30.Text = "tableCell30";
            this.tableCell30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell30.Weight = 0.38324344778017017;
            // 
            // tableCell35
            // 
            this.tableCell35.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.SUMMARY")});
            this.tableCell35.Dpi = 254F;
            this.tableCell35.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell35.Name = "tableCell35";
            this.tableCell35.StylePriority.UseFont = false;
            this.tableCell35.StylePriority.UseTextAlignment = false;
            summary4.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell35.Summary = summary4;
            this.tableCell35.Text = "tableCell35";
            this.tableCell35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell35.Weight = 0.40746918908178109;
            // 
            // tableCell31
            // 
            this.tableCell31.Dpi = 254F;
            this.tableCell31.Font = new System.Drawing.Font("Times New Roman", 12F, System.Drawing.FontStyle.Bold);
            this.tableCell31.Name = "tableCell31";
            this.tableCell31.StylePriority.UseFont = false;
            this.tableCell31.Text = "Всего к оплате:";
            this.tableCell31.Weight = 2.5925309273469308;
            // 
            // tableCell36
            // 
            this.tableCell36.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "SpecAct.SUMMARY")});
            this.tableCell36.Dpi = 254F;
            this.tableCell36.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.tableCell36.Name = "tableCell36";
            this.tableCell36.StylePriority.UseFont = false;
            this.tableCell36.StylePriority.UseTextAlignment = false;
            summary5.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.tableCell36.Summary = summary5;
            this.tableCell36.Text = "tableCell36";
            this.tableCell36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopCenter;
            this.tableCell36.Weight = 0.407469072653069;
            // 
            // tableCell33
            // 
            this.tableCell33.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.richText2});
            this.tableCell33.Dpi = 254F;
            this.tableCell33.Name = "tableCell33";
            this.tableCell33.Text = "tableCell33";
            this.tableCell33.Weight = 3;
            // 
            // richText2
            // 
            this.richText2.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.richText2.Dpi = 254F;
            this.richText2.Font = new System.Drawing.Font("Times New Roman", 12F, System.Drawing.FontStyle.Bold);
            this.richText2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.richText2.Name = "richText2";
            this.richText2.SerializableRtfString = resources.GetString("richText2.SerializableRtfString");
            this.richText2.SizeF = new System.Drawing.SizeF(2601F, 100.5417F);
            this.richText2.StylePriority.UseBorders = false;
            this.richText2.StylePriority.UseFont = false;
            // 
            // SpecActTableAdapter
            // 
            this.SpecActTableAdapter.SelectCommand = this.sqlCommand1;
            this.SpecActTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "SpecAct", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand1
            // 
            this.sqlCommand1.CommandText = resources.GetString("sqlCommand1.CommandText");
            this.sqlCommand1.Connection = this.sqlConnection1;
            // 
            // sqlConnection1
            // 
            this.sqlConnection1.ConnectionString = "Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=ROSTEST29082" +
                "016;Data Source=DEVSERV\\SQL2008R2DEV";
            this.sqlConnection1.FireInfoMessageEventOnUserErrors = false;
            // 
            // SpecList
            // 
            this.SpecList.DataSetName = "SpecListDataSet";
            this.SpecList.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // CYear
            // 
            this.CYear.Expression = "GetYear(Today())";
            this.CYear.FieldType = DevExpress.XtraReports.UI.FieldType.Int32;
            this.CYear.Name = "CYear";
            // 
            // NDS_PERC
            // 
            this.NDS_PERC.Name = "NDS_PERC";
            this.NDS_PERC.Type = typeof(decimal);
            this.NDS_PERC.ValueInfo = "0";
            this.NDS_PERC.Visible = false;
            // 
            // CONTRACT_NUM
            // 
            this.CONTRACT_NUM.Name = "CONTRACT_NUM";
            this.CONTRACT_NUM.Visible = false;
            // 
            // CONTRACT_DATE
            // 
            this.CONTRACT_DATE.Name = "CONTRACT_DATE";
            this.CONTRACT_DATE.Visible = false;
            // 
            // BABKI
            // 
            this.BABKI.Name = "BABKI";
            this.BABKI.Visible = false;
            // 
            // SpecificationList
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.TopMargin,
                        this.Detail,
                        this.BottomMargin,
                        this.ReportHeader,
                        this.GroupHeader1,
                        this.GroupFooter1});
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.CYear});
            this.DataAdapter = this.SpecActTableAdapter;
            this.DataMember = "SpecAct";
            this.DataSource = this.SpecList;
            this.Dpi = 254F;
            this.Landscape = true;
            this.Margins = new System.Drawing.Printing.Margins(98, 95, 117, 132);
            this.Name = "SpecificationList";
            this.PageHeight = 2159;
            this.PageWidth = 2794;
            this.Parameters.AddRange(new DevExpress.XtraReports.Parameters.Parameter[] {
                        this.NDS_PERC,
                        this.CONTRACT_NUM,
                        this.CONTRACT_DATE,
                        this.BABKI});
            this.ReportUnit = DevExpress.XtraReports.UI.ReportUnit.TenthsOfAMillimeter;
            this.Scripts.OnBeforePrint = "SpecificationList_BeforePrint";
            this.SnapGridSize = 31.75F;
            this.Version = "12.2";
            ((System.ComponentModel.ISupportInitialize)(this.table2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.richText1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.richText4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.richText3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.richText2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.SpecList)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SpecListDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SpecListDataSet : global::System.Data.DataSet {
        private SpecActDataTable tableSpecAct;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SpecListDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SpecListDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SpecAct"] != null)) {
                    base.Tables.Add(new SpecActDataTable(ds.Tables["SpecAct"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SpecActDataTable SpecAct {
            get {
                return this.tableSpecAct;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SpecListDataSet cln = ((SpecListDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SpecAct"] != null)) {
                    base.Tables.Add(new SpecActDataTable(ds.Tables["SpecAct"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSpecAct = ((SpecActDataTable)(base.Tables["SpecAct"]));
            if ((initTable == true)) {
                if ((this.tableSpecAct != null)) {
                    this.tableSpecAct.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SpecListDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSpecAct = new SpecActDataTable();
            base.Tables.Add(this.tableSpecAct);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSpecAct() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SpecListDataSet ds = new SpecListDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void SpecActRowChangeEventHandler(object sender, SpecActRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SpecActDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnCS_ID;
            private global::System.Data.DataColumn columnCONTRACT_ID;
            private global::System.Data.DataColumn columnURGENCY_ID;
            private global::System.Data.DataColumn columnTOTAL_PRICE;
            private global::System.Data.DataColumn columnINTEGRATE_TYPE_ID;
            private global::System.Data.DataColumn columnORDER_NUM;
            private global::System.Data.DataColumn columnURGENCY_NAME;
            private global::System.Data.DataColumn columnRAISE;
            private global::System.Data.DataColumn columnCOST;
            private global::System.Data.DataColumn columnNDS;
            private global::System.Data.DataColumn columnSUMMARY;
            private global::System.Data.DataColumn columnDEVICE_COUNT;
            private global::System.Data.DataColumn columnUSED_COUNT;
            private global::System.Data.DataColumn columnSERIALS;
            private global::System.Data.DataColumn columnENTITY_ID;
            private global::System.Data.DataColumn columnDT_ID;
            private global::System.Data.DataColumn columnDT_ENTITY_ID;
            private global::System.Data.DataColumn columnDEVICE_NAME;
            private global::System.Data.DataColumn columnDEVICE_MARK;
            private global::System.Data.DataColumn columnDEV_CODE;
            private global::System.Data.DataColumn columnCUSTOMER_DT_NAME;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SpecActDataTable() {
                this.TableName = "SpecAct";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SpecActDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SpecActDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CS_IDColumn {
                get {
                    return this.columnCS_ID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTRACT_IDColumn {
                get {
                    return this.columnCONTRACT_ID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URGENCY_IDColumn {
                get {
                    return this.columnURGENCY_ID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOTAL_PRICEColumn {
                get {
                    return this.columnTOTAL_PRICE;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTEGRATE_TYPE_IDColumn {
                get {
                    return this.columnINTEGRATE_TYPE_ID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDER_NUMColumn {
                get {
                    return this.columnORDER_NUM;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn URGENCY_NAMEColumn {
                get {
                    return this.columnURGENCY_NAME;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RAISEColumn {
                get {
                    return this.columnRAISE;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COSTColumn {
                get {
                    return this.columnCOST;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NDSColumn {
                get {
                    return this.columnNDS;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUMMARYColumn {
                get {
                    return this.columnSUMMARY;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEVICE_COUNTColumn {
                get {
                    return this.columnDEVICE_COUNT;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USED_COUNTColumn {
                get {
                    return this.columnUSED_COUNT;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERIALSColumn {
                get {
                    return this.columnSERIALS;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENTITY_IDColumn {
                get {
                    return this.columnENTITY_ID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DT_IDColumn {
                get {
                    return this.columnDT_ID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DT_ENTITY_IDColumn {
                get {
                    return this.columnDT_ENTITY_ID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEVICE_NAMEColumn {
                get {
                    return this.columnDEVICE_NAME;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEVICE_MARKColumn {
                get {
                    return this.columnDEVICE_MARK;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEV_CODEColumn {
                get {
                    return this.columnDEV_CODE;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMER_DT_NAMEColumn {
                get {
                    return this.columnCUSTOMER_DT_NAME;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SpecActRow this[int index] {
                get {
                    return ((SpecActRow)(this.Rows[index]));
                }
            }
            public event SpecActRowChangeEventHandler SpecActRowChanging;
            public event SpecActRowChangeEventHandler SpecActRowChanged;
            public event SpecActRowChangeEventHandler SpecActRowDeleting;
            public event SpecActRowChangeEventHandler SpecActRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSpecActRow(SpecActRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SpecActRow AddSpecActRow(
                        long CS_ID, 
                        long CONTRACT_ID, 
                        short URGENCY_ID, 
                        decimal TOTAL_PRICE, 
                        short INTEGRATE_TYPE_ID, 
                        int ORDER_NUM, 
                        string URGENCY_NAME, 
                        double RAISE, 
                        decimal COST, 
                        decimal NDS, 
                        decimal SUMMARY, 
                        int DEVICE_COUNT, 
                        int USED_COUNT, 
                        string SERIALS, 
                        long ENTITY_ID, 
                        int DT_ID, 
                        int DT_ENTITY_ID, 
                        string DEVICE_NAME, 
                        string DEVICE_MARK, 
                        string DEV_CODE, 
                        string CUSTOMER_DT_NAME) {
                SpecActRow rowSpecActRow = ((SpecActRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CS_ID,
                        CONTRACT_ID,
                        URGENCY_ID,
                        TOTAL_PRICE,
                        INTEGRATE_TYPE_ID,
                        ORDER_NUM,
                        URGENCY_NAME,
                        RAISE,
                        COST,
                        NDS,
                        SUMMARY,
                        DEVICE_COUNT,
                        USED_COUNT,
                        SERIALS,
                        ENTITY_ID,
                        DT_ID,
                        DT_ENTITY_ID,
                        DEVICE_NAME,
                        DEVICE_MARK,
                        DEV_CODE,
                        CUSTOMER_DT_NAME};
                rowSpecActRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSpecActRow);
                return rowSpecActRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SpecActDataTable cln = ((SpecActDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SpecActDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCS_ID = base.Columns["CS_ID"];
                this.columnCONTRACT_ID = base.Columns["CONTRACT_ID"];
                this.columnURGENCY_ID = base.Columns["URGENCY_ID"];
                this.columnTOTAL_PRICE = base.Columns["TOTAL_PRICE"];
                this.columnINTEGRATE_TYPE_ID = base.Columns["INTEGRATE_TYPE_ID"];
                this.columnORDER_NUM = base.Columns["ORDER_NUM"];
                this.columnURGENCY_NAME = base.Columns["URGENCY_NAME"];
                this.columnRAISE = base.Columns["RAISE"];
                this.columnCOST = base.Columns["COST"];
                this.columnNDS = base.Columns["NDS"];
                this.columnSUMMARY = base.Columns["SUMMARY"];
                this.columnDEVICE_COUNT = base.Columns["DEVICE_COUNT"];
                this.columnUSED_COUNT = base.Columns["USED_COUNT"];
                this.columnSERIALS = base.Columns["SERIALS"];
                this.columnENTITY_ID = base.Columns["ENTITY_ID"];
                this.columnDT_ID = base.Columns["DT_ID"];
                this.columnDT_ENTITY_ID = base.Columns["DT_ENTITY_ID"];
                this.columnDEVICE_NAME = base.Columns["DEVICE_NAME"];
                this.columnDEVICE_MARK = base.Columns["DEVICE_MARK"];
                this.columnDEV_CODE = base.Columns["DEV_CODE"];
                this.columnCUSTOMER_DT_NAME = base.Columns["CUSTOMER_DT_NAME"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCS_ID = new global::System.Data.DataColumn("CS_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCS_ID);
                this.columnCONTRACT_ID = new global::System.Data.DataColumn("CONTRACT_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTRACT_ID);
                this.columnURGENCY_ID = new global::System.Data.DataColumn("URGENCY_ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURGENCY_ID);
                this.columnTOTAL_PRICE = new global::System.Data.DataColumn("TOTAL_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_PRICE);
                this.columnINTEGRATE_TYPE_ID = new global::System.Data.DataColumn("INTEGRATE_TYPE_ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTEGRATE_TYPE_ID);
                this.columnORDER_NUM = new global::System.Data.DataColumn("ORDER_NUM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_NUM);
                this.columnURGENCY_NAME = new global::System.Data.DataColumn("URGENCY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURGENCY_NAME);
                this.columnRAISE = new global::System.Data.DataColumn("RAISE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAISE);
                this.columnCOST = new global::System.Data.DataColumn("COST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOST);
                this.columnNDS = new global::System.Data.DataColumn("NDS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNDS);
                this.columnSUMMARY = new global::System.Data.DataColumn("SUMMARY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUMMARY);
                this.columnDEVICE_COUNT = new global::System.Data.DataColumn("DEVICE_COUNT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEVICE_COUNT);
                this.columnUSED_COUNT = new global::System.Data.DataColumn("USED_COUNT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSED_COUNT);
                this.columnSERIALS = new global::System.Data.DataColumn("SERIALS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERIALS);
                this.columnENTITY_ID = new global::System.Data.DataColumn("ENTITY_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTITY_ID);
                this.columnDT_ID = new global::System.Data.DataColumn("DT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDT_ID);
                this.columnDT_ENTITY_ID = new global::System.Data.DataColumn("DT_ENTITY_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDT_ENTITY_ID);
                this.columnDEVICE_NAME = new global::System.Data.DataColumn("DEVICE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEVICE_NAME);
                this.columnDEVICE_MARK = new global::System.Data.DataColumn("DEVICE_MARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEVICE_MARK);
                this.columnDEV_CODE = new global::System.Data.DataColumn("DEV_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEV_CODE);
                this.columnCUSTOMER_DT_NAME = new global::System.Data.DataColumn("CUSTOMER_DT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_DT_NAME);
                this.columnCS_ID.AllowDBNull = false;
                this.columnCONTRACT_ID.AllowDBNull = false;
                this.columnURGENCY_ID.AllowDBNull = false;
                this.columnTOTAL_PRICE.AllowDBNull = false;
                this.columnURGENCY_NAME.MaxLength = 80;
                this.columnCOST.ReadOnly = true;
                this.columnNDS.ReadOnly = true;
                this.columnSUMMARY.ReadOnly = true;
                this.columnUSED_COUNT.ReadOnly = true;
                this.columnSERIALS.ReadOnly = true;
                this.columnSERIALS.MaxLength = 1000;
                this.columnDEVICE_NAME.MaxLength = 256;
                this.columnDEVICE_MARK.MaxLength = 256;
                this.columnDEV_CODE.MaxLength = 9;
                this.columnCUSTOMER_DT_NAME.MaxLength = 896;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SpecActRow NewSpecActRow() {
                return ((SpecActRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SpecActRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SpecActRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SpecActRowChanged != null)) {
                    this.SpecActRowChanged(this, new SpecActRowChangeEvent(((SpecActRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SpecActRowChanging != null)) {
                    this.SpecActRowChanging(this, new SpecActRowChangeEvent(((SpecActRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SpecActRowDeleted != null)) {
                    this.SpecActRowDeleted(this, new SpecActRowChangeEvent(((SpecActRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SpecActRowDeleting != null)) {
                    this.SpecActRowDeleting(this, new SpecActRowChangeEvent(((SpecActRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSpecActRow(SpecActRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SpecListDataSet ds = new SpecListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SpecActDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SpecActRow : global::System.Data.DataRow {
            private SpecActDataTable tableSpecAct;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SpecActRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSpecAct = ((SpecActDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CS_ID {
                get {
                    return ((long)(this[this.tableSpecAct.CS_IDColumn]));
                }
                set {
                    this[this.tableSpecAct.CS_IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CONTRACT_ID {
                get {
                    return ((long)(this[this.tableSpecAct.CONTRACT_IDColumn]));
                }
                set {
                    this[this.tableSpecAct.CONTRACT_IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short URGENCY_ID {
                get {
                    return ((short)(this[this.tableSpecAct.URGENCY_IDColumn]));
                }
                set {
                    this[this.tableSpecAct.URGENCY_IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL_PRICE {
                get {
                    return ((decimal)(this[this.tableSpecAct.TOTAL_PRICEColumn]));
                }
                set {
                    this[this.tableSpecAct.TOTAL_PRICEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short INTEGRATE_TYPE_ID {
                get {
                    try {
                        return ((short)(this[this.tableSpecAct.INTEGRATE_TYPE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'INTEGRATE_TYPE_ID\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.INTEGRATE_TYPE_IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ORDER_NUM {
                get {
                    try {
                        return ((int)(this[this.tableSpecAct.ORDER_NUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ORDER_NUM\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.ORDER_NUMColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string URGENCY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSpecAct.URGENCY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'URGENCY_NAME\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.URGENCY_NAMEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RAISE {
                get {
                    try {
                        return ((double)(this[this.tableSpecAct.RAISEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'RAISE\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.RAISEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal COST {
                get {
                    try {
                        return ((decimal)(this[this.tableSpecAct.COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'COST\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.COSTColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NDS {
                get {
                    try {
                        return ((decimal)(this[this.tableSpecAct.NDSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NDS\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.NDSColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUMMARY {
                get {
                    try {
                        return ((decimal)(this[this.tableSpecAct.SUMMARYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SUMMARY\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.SUMMARYColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEVICE_COUNT {
                get {
                    try {
                        return ((int)(this[this.tableSpecAct.DEVICE_COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DEVICE_COUNT\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.DEVICE_COUNTColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USED_COUNT {
                get {
                    try {
                        return ((int)(this[this.tableSpecAct.USED_COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'USED_COUNT\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.USED_COUNTColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERIALS {
                get {
                    try {
                        return ((string)(this[this.tableSpecAct.SERIALSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SERIALS\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.SERIALSColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ENTITY_ID {
                get {
                    try {
                        return ((long)(this[this.tableSpecAct.ENTITY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENTITY_ID\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.ENTITY_IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DT_ID {
                get {
                    try {
                        return ((int)(this[this.tableSpecAct.DT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DT_ID\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.DT_IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DT_ENTITY_ID {
                get {
                    try {
                        return ((int)(this[this.tableSpecAct.DT_ENTITY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DT_ENTITY_ID\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.DT_ENTITY_IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEVICE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSpecAct.DEVICE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DEVICE_NAME\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.DEVICE_NAMEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEVICE_MARK {
                get {
                    try {
                        return ((string)(this[this.tableSpecAct.DEVICE_MARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DEVICE_MARK\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.DEVICE_MARKColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEV_CODE {
                get {
                    try {
                        return ((string)(this[this.tableSpecAct.DEV_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DEV_CODE\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.DEV_CODEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_DT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSpecAct.CUSTOMER_DT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CUSTOMER_DT_NAME\' в таблице \'SpecAct\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSpecAct.CUSTOMER_DT_NAMEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTEGRATE_TYPE_IDNull() {
                return this.IsNull(this.tableSpecAct.INTEGRATE_TYPE_IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTEGRATE_TYPE_IDNull() {
                this[this.tableSpecAct.INTEGRATE_TYPE_IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORDER_NUMNull() {
                return this.IsNull(this.tableSpecAct.ORDER_NUMColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORDER_NUMNull() {
                this[this.tableSpecAct.ORDER_NUMColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsURGENCY_NAMENull() {
                return this.IsNull(this.tableSpecAct.URGENCY_NAMEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetURGENCY_NAMENull() {
                this[this.tableSpecAct.URGENCY_NAMEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRAISENull() {
                return this.IsNull(this.tableSpecAct.RAISEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRAISENull() {
                this[this.tableSpecAct.RAISEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOSTNull() {
                return this.IsNull(this.tableSpecAct.COSTColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOSTNull() {
                this[this.tableSpecAct.COSTColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNDSNull() {
                return this.IsNull(this.tableSpecAct.NDSColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNDSNull() {
                this[this.tableSpecAct.NDSColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUMMARYNull() {
                return this.IsNull(this.tableSpecAct.SUMMARYColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUMMARYNull() {
                this[this.tableSpecAct.SUMMARYColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEVICE_COUNTNull() {
                return this.IsNull(this.tableSpecAct.DEVICE_COUNTColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEVICE_COUNTNull() {
                this[this.tableSpecAct.DEVICE_COUNTColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSED_COUNTNull() {
                return this.IsNull(this.tableSpecAct.USED_COUNTColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSED_COUNTNull() {
                this[this.tableSpecAct.USED_COUNTColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERIALSNull() {
                return this.IsNull(this.tableSpecAct.SERIALSColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERIALSNull() {
                this[this.tableSpecAct.SERIALSColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENTITY_IDNull() {
                return this.IsNull(this.tableSpecAct.ENTITY_IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENTITY_IDNull() {
                this[this.tableSpecAct.ENTITY_IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDT_IDNull() {
                return this.IsNull(this.tableSpecAct.DT_IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDT_IDNull() {
                this[this.tableSpecAct.DT_IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDT_ENTITY_IDNull() {
                return this.IsNull(this.tableSpecAct.DT_ENTITY_IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDT_ENTITY_IDNull() {
                this[this.tableSpecAct.DT_ENTITY_IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEVICE_NAMENull() {
                return this.IsNull(this.tableSpecAct.DEVICE_NAMEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEVICE_NAMENull() {
                this[this.tableSpecAct.DEVICE_NAMEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEVICE_MARKNull() {
                return this.IsNull(this.tableSpecAct.DEVICE_MARKColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEVICE_MARKNull() {
                this[this.tableSpecAct.DEVICE_MARKColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEV_CODENull() {
                return this.IsNull(this.tableSpecAct.DEV_CODEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEV_CODENull() {
                this[this.tableSpecAct.DEV_CODEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_DT_NAMENull() {
                return this.IsNull(this.tableSpecAct.CUSTOMER_DT_NAMEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_DT_NAMENull() {
                this[this.tableSpecAct.CUSTOMER_DT_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SpecActRowChangeEvent : global::System.EventArgs {
            private SpecActRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SpecActRowChangeEvent(SpecActRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SpecActRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
